<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>回溯 on Focus-ChrisHRZ&#39;s blog</title>
    <link>https://chrishrz.github.io/tags/%E5%9B%9E%E6%BA%AF/</link>
    <description>Recent content in 回溯 on Focus-ChrisHRZ&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 May 2020 18:45:47 +0800</lastBuildDate>
    
	<atom:link href="https://chrishrz.github.io/tags/%E5%9B%9E%E6%BA%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Lc]52N皇后II</title>
      <link>https://chrishrz.github.io/post/lc52n%E7%9A%87%E5%90%8Eii/</link>
      <pubDate>Thu, 21 May 2020 18:45:47 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc52n%E7%9A%87%E5%90%8Eii/</guid>
      <description>题目 题解 这道题是51题的化简版，这里贴上51题的思路。唯一的区别就说不用统计所有的棋盘情况，而是遍历完一个分支就计数+1 这道题是很经典的一道</description>
    </item>
    
    <item>
      <title>[Lc]51N皇后</title>
      <link>https://chrishrz.github.io/post/lc51n%E7%9A%87%E5%90%8E/</link>
      <pubDate>Thu, 21 May 2020 11:23:26 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc51n%E7%9A%87%E5%90%8E/</guid>
      <description>题目 题解 这道题是很经典的一道题，思路就是dfs与回溯剪枝。这类回溯题的递归函数基本套路是这样的 判断是否终止并满足条件，满足了就加入res中 遍</description>
    </item>
    
    <item>
      <title>[Lc]面试题38字符串的排列</title>
      <link>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9838%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/</link>
      <pubDate>Wed, 20 May 2020 20:57:28 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9838%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/</guid>
      <description>题目 题解 整体思路是从第一个数开始，不断地与后面的数进行交换（这个交换也包括与自己交换，即不交换），每一个数都有s.size()-start种</description>
    </item>
    
    <item>
      <title>[Lc]93复原IP地址</title>
      <link>https://chrishrz.github.io/post/lc93%E5%A4%8D%E5%8E%9Fip%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Thu, 07 May 2020 12:46:45 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc93%E5%A4%8D%E5%8E%9Fip%E5%9C%B0%E5%9D%80/</guid>
      <description>题目 题解 这道题主要是递归然后剪枝，符合条件的放入结果，不符合就键值，主要是要确定几种不符合条件的情况 剩下的数字不够分的，比如还有2个数，但是</description>
    </item>
    
  </channel>
</rss>