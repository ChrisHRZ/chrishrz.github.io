<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数列 on Focus-ChrisHRZ&#39;s blog</title>
    <link>https://chrishrz.github.io/tags/%E6%95%B0%E5%88%97/</link>
    <description>Recent content in 数列 on Focus-ChrisHRZ&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 May 2020 12:13:41 +0800</lastBuildDate>
    
	<atom:link href="https://chrishrz.github.io/tags/%E6%95%B0%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Lc]面试题10_II青蛙跳台阶问题</title>
      <link>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9810_ii%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 11 May 2020 12:13:41 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9810_ii%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/</guid>
      <description>题目 题解 这题与70题一样，详见70题题解，因为要取模，因此通项公式法无法通过，递推公式法也太慢通过不了，其分析详见70题题解，这里贴一个递推</description>
    </item>
    
    <item>
      <title>[Lc]509斐波那契数</title>
      <link>https://chrishrz.github.io/post/lc509%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/</link>
      <pubDate>Mon, 11 May 2020 11:23:15 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc509%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/</guid>
      <description>题目 题解 这题和爬楼梯是一样的，这题与剑指offer10一样，三种方法 1. 递归 这个方法最慢，因为有大量的重复运算，写法最简单，就不写了 时间复杂度</description>
    </item>
    
    <item>
      <title>[Lc]面试题10_I斐波那契数列</title>
      <link>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9810_i%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</link>
      <pubDate>Mon, 11 May 2020 11:20:02 +0800</pubDate>
      
      <guid>https://chrishrz.github.io/post/lc%E9%9D%A2%E8%AF%95%E9%A2%9810_i%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</guid>
      <description>题目 题解 这题与[lc]509一样，区别在于结果需要取余，而对于最终结果取余和对于每一位取余再计算下一个数字答案是一样的。具体分析见(http</description>
    </item>
    
  </channel>
</rss>